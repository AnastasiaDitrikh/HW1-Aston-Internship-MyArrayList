package array_list;


public interface MyArray<E> {
    /**
     * Метод добавляет элемент e в MyList в конец листа
     * @param e представляет собой элемент типа<E>, который добавляем в лист
     * @return true, если элемент успешно добавлен и false если нет
     */
    boolean add(E e);
    /**
     * Метод добавляет элемент e в MyList на позицию index в листе
     * @param e представляет собой элемент типа<E>, который добавляем в лист
     * @param index представляет собой элемент типа<E>, который добавляем в лист
     */
    void add(int index, E e);
    /**
     * Метод находит индекс элемента e в MyList
     * @param e представляет собой элемент типа<E>, который ищем в листе
     * @return метод возвращает индекс, если элемент найден, или -1, если элемент не найден
     */
    int indexOf(E e);
    /**
     * Метод находит индекс последнего вхождения элемента e в MyList (например, если в листе имеются дубликаты)
     * @param e представляет собой элемент типа<E>, который ищем в листе
     * @return метод возвращает индекс, если элемент найден, или -1, если элемент не найден
     */
    int lastIndexOf(E e);
    /**
     * Метод удаляет елемент из MyList по заданному индексу
     * @param index представляет собой индекс элемента, который хотим удалить
     */
    void delete(int index);

    /**
     * Метод удаляет елементы из MyList по заданному интервалу, с индекса indexStart не включая в удаление indexEnd
     * @param indexStart представляет собой индекс элемента, с позиции которого будем удалять элементы
     * @param indexEnd представляет собой индекс элемента, до которого будем удалять, не включая его
     */
    void deleteRange(int indexStart, int indexEnd);
    /**
     * Метод удаляет елемент из MyList по заданному значению e
     * @param e представляет собой элемент типа<E>, который удаляем из листа
     */
    void delete(E e);
    /**
     * Метод получает елемент из MyList по заданному значению index
     * @param index представляет собой индекс элемента, который хотим получить
     */
    E get(int index);
    /**
     * Метод находит размер листа
     * @return метод возвращает размер листа в виде числа int,
     */
    int size();
    /**
     * Метод проверяет наличие елемента в MyList
     * @param e представляет собой индекс элемента, который хотим получить
     * @return true, если элемент содержится и false если нет
     */
    boolean contains(E e);
    /**
     * Метод удаляет все элементы из листа
     */
    void clear();
    /**
     * Метод обновляет элемент в листе по заданному индексу
     * @param e представляет собой значение элемента типа<E>, которое будем записывать в листе вместо существующего
     * @param index представляет собой индекс элемента, на позиции которой находится обновляемый элемент
     * @return возвращает обновленное значение
     */

    E set(int index, E e);
    /**
     * Метод производит сортировку в естественном порядке (цифры по возрастанию, строки в алфавитном порядке)
     */
    void sort();
}